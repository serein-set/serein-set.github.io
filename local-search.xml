<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于边缘计算的物联网高效通信联邦学习</title>
    <link href="/2021/07/17/PaperRead-GSS/"/>
    <url>/2021/07/17/PaperRead-GSS/</url>
    
    <content type="html"><![CDATA[<p><strong><code>Title</code></strong>  Toward Communication-Efficient Federated Learning in the Internet of Things With  Edge Computing</p><p><strong><code>Keywords</code></strong>  Adaptive optimizer, deep learning, edge computing, federated learning, gradient sparsification</p><p><strong><code>研究主题</code></strong></p><ul><li>研究主题：提出了一种通用梯度稀疏化(GGS)框架，用于自适应优化，以纠正稀疏梯度更新过程。<ul><li>两个重要的机制:<ul><li>梯度校正：通过梯度校正，使工作节点交换优化修正的梯度，使<strong>模型更好地收敛</strong>。</li><li>局部梯度批量归一化更新-BN-LG：利用BN层的局部梯度来防止表示力下降，并减轻延迟梯度对后续训练过程的影响可以在不增加通信开销的情况下<strong>缓解延迟梯度</strong>的影响。</li></ul></li></ul></li></ul><p><strong><code>关键技术</code></strong></p><p><strong><code>系统架构</code></strong></p><p><strong><code>总结</code></strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>边缘计算</tag>
      
      <tag>联邦学习</tag>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>边缘计算中的异常活动检测-一种迁移学习方法</title>
    <link href="/2021/07/16/PaperRead-Abnormal-Activity-Detection-in-Edge-Computing/"/>
    <url>/2021/07/16/PaperRead-Abnormal-Activity-Detection-in-Edge-Computing/</url>
    
    <content type="html"><![CDATA[<h5 id="Title-Abnormal-Activity-Detection-in-Edge-Computing-A-Transfer-Learning-Approach"><a href="#Title-Abnormal-Activity-Detection-in-Edge-Computing-A-Transfer-Learning-Approach" class="headerlink" title="Title  Abnormal Activity Detection in Edge Computing: A Transfer Learning Approach"></a><code>Title</code>  Abnormal Activity Detection in Edge Computing: A Transfer Learning Approach</h5><h5 id="Keywords"><a href="#Keywords" class="headerlink" title="Keywords"></a><code>Keywords</code></h5><p>Human activity detection,  edge computing,  convolutional feature embedding  learning,  real-time detection</p><h5 id="研究主题"><a href="#研究主题" class="headerlink" title="研究主题"></a><code>研究主题</code></h5><ul><li>研究主题：提出了一种边缘计算环境下实时异常安全识别的轻量级计算框架。</li><li>提出了一个轻量级深度学习框架CNNEF，使用SMOTE算法解决不平衡标签问题，并实现卷积神经网络嵌入特征(CNNEF)，通过边缘节点中的传感器数据识别人类异常活动。</li><li>CNNEF框架两个主要优势：更高的准确性和更少的计算时间</li></ul><h5 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a><code>关键技术</code></h5><ol><li><p>CNN—训练得到高级嵌入特征。</p><ul><li><p>通过卷积神经网络对主要数据集进行训练后，输出层将模型中的权值去除并保存，用于嵌入评估数据集的高级特征</p></li><li><p>原因：</p><ol><li>传感器数据的维度符合CNN的输入要求，CNN在处理稀疏的数据时更具鲁棒性</li><li>处理实时传感器数据：每次提取的高级特征嵌入到传入的实时新传感器数据中，而不是重新训练整个模型。</li><li>CNNEF符合异常活动检测的时间敏感性要求</li></ol></li></ul></li><li><p>SMOTE-过采样技术</p></li></ol><h5 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a><code>系统架构</code></h5><ol><li><p>为了提高异常情况检测的准确性，我们首先对数据集中的异常(少数)观测值应用<strong>过采样算法</strong></p><ul><li><p>SMOTE—Synthetic Minority Oversampling Technique：在特征空间中操作，创建合成示例。合成示例创建的少数样本$X_{new}$，以及k个少数类最近邻居，这些样本是根据所需的过采样量随机确定的是根据所需的过采样量随机确定的。</p><p><img src="https://gitee.com/serein-set/pic/raw/master/20210717215800.png" alt=""></p></li></ul></li><li><p>包含通过预先训练好的CNN，将传感器数据转换为<strong>高级嵌入特征</strong>。来自高层的特性比原始变量更具有代表性和抽象。利用卷积特征，传统的机器学习算法收敛速度更快，准确率更高</p><ul><li><p>卷积特征提取</p><p><img src="https://gitee.com/serein-set/pic/raw/master/20210717215850.png" alt="image-20210717215850450"></p><p><img src="https://gitee.com/serein-set/pic/raw/master/20210717215908.png" alt="image-20210717215908659"></p><p><img src="https://gitee.com/serein-set/pic/raw/master/20210717215929.png" alt="image-20210717215929354"></p></li></ul></li></ol><p>​        - 卷积层：卷积利用了三个主要因素来改善机器学习系统：稀疏互动、参数共享和等值表示</p><p>​        - 建立两个完全连接的层来预测人类活动。</p><ol><li><p>用于识别的嵌入特征</p><p><img src="https://gitee.com/serein-set/pic/raw/master/20210717215651.png" alt="image-20210717215643950"></p><ul><li><p>通过CNN预训练的深度神经网络<strong>降低数据维度</strong></p></li><li><p>物联网流媒体传感器数据的特征嵌入有助于分类器区分异常行为和常规活动。</p></li><li><p><strong>嵌入的特征代表了原始数据的潜在和抽象信息</strong>。</p></li><li><p><strong>机器学习算法可以通过使用高层次的嵌入特征找到更快和更好的局部最优解决方案</strong>。</p></li></ul></li></ol><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a><code>总结</code></h5><ol><li>优点：在边缘节点应用深度学习结合机器学习进行异常检测，能够满足实时性及高响应的需求。</li><li>缺点：CNN需要大量的数据进行训练</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>边缘计算</tag>
      
      <tag>迁移学习</tag>
      
      <tag>异常检测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MEdge-Chain-利用边缘计算和区块链实现高效的医疗数据交换</title>
    <link href="/2021/07/16/PaperRead-MEdge-Chain/"/>
    <url>/2021/07/16/PaperRead-MEdge-Chain/</url>
    
    <content type="html"><![CDATA[<h4 id="MEdge-Chain-Leveraging-Edge-Computing-and-Blockchain-for-Efficient-Medical-Data-Exchange"><a href="#MEdge-Chain-Leveraging-Edge-Computing-and-Blockchain-for-Efficient-Medical-Data-Exchange" class="headerlink" title="MEdge-Chain: Leveraging Edge Computing and Blockchain for Efficient Medical Data Exchange"></a>MEdge-Chain: Leveraging Edge Computing and Blockchain for Efficient Medical Data Exchange</h4><h4 id="keywords"><a href="#keywords" class="headerlink" title="keywords"></a><code>keywords</code></h4><p>Blockchain, edge computing, Internet of Medical Things (IoMT), priority assignment, remote health monitoring</p><h4 id="主题"><a href="#主题" class="headerlink" title="主题"></a><code>主题</code></h4><ul><li>医疗-边缘-区块链(MEdge-Chain)，这是一个利用边缘计算和基于区块链技术的整合来处理大量医疗数据的整体框架</li></ul><ol><li>边缘计算—用于监测患者，在边缘，以确保早期检测，可扩展性，并快速响应紧急事件。</li><li>优化的区块链配置模型，并采用基于队列的优先级分配方法来优化管理来自不同实体的接收交易。</li></ol><h4 id="架构"><a href="#架构" class="headerlink" title="架构"></a><code>架构</code></h4><ol><li>本地网络<ul><li>医疗物联网（IoMT）—物联网(IoT)设备的组合，连接/靠近病人，用于监测智能辅助环境中的健康状况和活动。</li><li>本地医疗服务提供者（LHSP）—LHSP是一种医疗设施，可以监视并为当地患者提供所需的医疗服务，记录患者的病情，并在需要时提供及时的紧急服务</li></ul></li><li>区块链网络<ul><li>核心：基于区块链的多通道数据共享架构，可以实现不同电子医疗实体之间医疗数据的安全访问、处理和共享</li><li>外部边缘（EE）— 拟议的架构中，医院或本地医疗服务提供者(LHSP)的任务比上述任务更高级：它也可以作为外部边缘(EE)，负责数据存储，应用复杂的数据分析技术，并与公共卫生实体共享重要的健康相关信息。因此，利用边缘计算的力量，每个实体都可以在外部边缘(EE)处验证医疗数据的真实性和完整性，然后再在区块链内共享。</li><li>公共卫生部（MOPH）—通过与不同的卫生实体协调，监测保健服务的质量和有效性。</li><li>其他实体</li></ul></li><li><p>主要完成的功能</p><ul><li>通过在边缘和区块链上实现以下主要功能<ul><li>数据采集、特征提取和患者状态监测，以保证对关键医疗事件检测的高可靠性和快速响应时间。</li><li>随时随地对不同实体进行安全的数据访问。</li></ul></li></ul><ol><li><p>边缘—患者监测方案—实现的功能：</p><ul><li>边缘功能的目的：<ul><li>测边缘一级的关键事件。</li><li>通过MEdge-Chain系统，利用多样化的区块链渠道，获取何时以及分享哪些数据。</li></ul></li><li>收集不同病人的数据（医院内或医院外）。</li><li>从获得的数据中识别出与患者状态相关的信息性的具体特征。</li><li>利用识别出的特征，检测患者状态的重大变化。</li></ul><ol><li>特征提取，第一步是识别出对我们的数据变化检测有参考价值、代表性和相关性的主要统计特征</li><li>检测患者状态和共享数据—第二步是检测患者状态的主要变化<ul><li>如果检测到重大变化（即紧急情况），它将通过区块链分享一个紧急通知，以及可能需要进一步调查的原始数据。</li><li>如果检测到轻微/无变化，它将只分享所获得的特征。</li><li>如果只检测到一个或两个通道的重大变化，则意味着测量结果可能因实验中的某些错误而不准确。因此，建议通知责任医生重复测量。</li></ul></li></ol></li><li><p>多通道区块链实现的功能：</p><ul><li>每个通道对应一个独立的交易链，可以用来实现通道用户之间的数据访问和私人通信。在区块链中考虑了三个通道：<ul><li>通道1用于紧急数据(如紧急通知)，</li><li>通道2用于非紧急数据但需要高安全级别的数据(如机密法律信息)，</li><li>通道3用于正常数据。</li></ul></li><li>一般的区块链架构主要包括：数据发送者、区块链管理器（BM）和验证者。<ul><li>首先，数据发送者将自己的数据以 “交易 “的形式上传至附近的BM</li><li>然后，BM作为验证者的管理者：它将未经验证的区块分发给验证者进行<strong>验证</strong>，触发验证者之间的<strong>共识过程</strong>，并将验证后的区块插入区块链中。因此，BM作为领导者，而验证者则是跟随者，合作完成了块验证任务。<ul><li><strong>收集不同实体的交易</strong></li><li><strong>优先级分配</strong>，旨在根据不同实体的紧急程度和到达时间，为接收到的交易分配不同的优先级。<ul><li>作用：目的是根据不同实体的紧急程度，尽量减少收到的交易的sojourn time。在这里，sojourn time指的是一个交易在被添加到区块链之前预计等待的总时间。这个sojourn time将通过识别不同的紧急程度来控制，即紧急、正常和非紧急。然后，我们采用队列模型的使用，根据不同收到的交易的紧急程度来计算sojourn time。具体来说，我们根据抢先恢复优先级的概念来定义等待时间.即优先级较高的事务中断了优先级较低的事务的处理。</li></ul></li><li><strong>区块链通道分配</strong>，根据接收到的交易的紧急程度和安全级别，将其分配到相应的通道。</li><li>准备并向选定的验证者（如医院、NIH和MOPH，它们有足够的计算和存储资源）分发未经验证的区块</li><li><strong>区块链配置优化</strong>，根据多样化的应用需求和数据类型，优化不同的区块链配置参数。</li></ul></li></ul></li></ul></li></ol></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>边缘计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/15/hello-world/"/>
    <url>/2021/07/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
